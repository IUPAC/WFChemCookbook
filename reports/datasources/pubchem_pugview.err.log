Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/nbclient/client.py", line 1269, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/nbclient/util.py", line 85, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/nbclient/util.py", line 60, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/nbclient/client.py", line 707, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/nbclient/client.py", line 1025, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/nbclient/client.py", line 919, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
heading = "Kovats+Retention+Index"      # spaces are replaced with "+"

num_page_total = 80
data = [None] * num_page_total

for i in range(num_page_total):
    
    page_curr = i + 1
    url = base + "/annotations/heading/JSON?heading=" + heading + "&page=" + str(page_curr)
    data[i] = requests.get(url).json()
    
    if page_curr % 5 == 0 :
        print("Getting data for page", page_curr)
    
    time.sleep(0.2)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mInvalidChunkLength[0m                        Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/urllib3/response.py:712[0m, in [0;36mHTTPResponse._error_catcher[0;34m(self)[0m
[1;32m    711[0m [38;5;28;01mtry[39;00m:
[0;32m--> 712[0m     [38;5;28;01myield[39;00m
[1;32m    714[0m [38;5;28;01mexcept[39;00m SocketTimeout [38;5;28;01mas[39;00m e:
[1;32m    715[0m     [38;5;66;03m# FIXME: Ideally we'd like to include the url in the ReadTimeoutError but[39;00m
[1;32m    716[0m     [38;5;66;03m# there is yet no clean way to get at it from this context.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/urllib3/response.py:1071[0m, in [0;36mHTTPResponse.read_chunked[0;34m(self, amt, decode_content)[0m
[1;32m   1070[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m-> 1071[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_chunk_length[49m[43m([49m[43m)[49m
[1;32m   1072[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mchunk_left [38;5;241m==[39m [38;5;241m0[39m:

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/urllib3/response.py:1006[0m, in [0;36mHTTPResponse._update_chunk_length[0;34m(self)[0m
[1;32m   1005[0m [38;5;28mself[39m[38;5;241m.[39mclose()
[0;32m-> 1006[0m [38;5;28;01mraise[39;00m InvalidChunkLength([38;5;28mself[39m, line) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m

[0;31mInvalidChunkLength[0m: InvalidChunkLength(got length b'', 0 bytes read)

The above exception was the direct cause of the following exception:

[0;31mProtocolError[0m                             Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/models.py:816[0m, in [0;36mResponse.iter_content.<locals>.generate[0;34m()[0m
[1;32m    815[0m [38;5;28;01mtry[39;00m:
[0;32m--> 816[0m     [38;5;28;01myield from[39;00m [38;5;28mself[39m[38;5;241m.[39mraw[38;5;241m.[39mstream(chunk_size, decode_content[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m    817[0m [38;5;28;01mexcept[39;00m ProtocolError [38;5;28;01mas[39;00m e:

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/urllib3/response.py:931[0m, in [0;36mHTTPResponse.stream[0;34m(self, amt, decode_content)[0m
[1;32m    930[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mchunked [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39msupports_chunked_reads():
[0;32m--> 931[0m     [38;5;28;01myield from[39;00m [38;5;28mself[39m[38;5;241m.[39mread_chunked(amt, decode_content[38;5;241m=[39mdecode_content)
[1;32m    932[0m [38;5;28;01melse[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/urllib3/response.py:1059[0m, in [0;36mHTTPResponse.read_chunked[0;34m(self, amt, decode_content)[0m
[1;32m   1054[0m     [38;5;28;01mraise[39;00m BodyNotHttplibCompatible(
[1;32m   1055[0m         [38;5;124m"[39m[38;5;124mBody should be http.client.HTTPResponse like. [39m[38;5;124m"[39m
[1;32m   1056[0m         [38;5;124m"[39m[38;5;124mIt should have have an fp attribute which returns raw chunks.[39m[38;5;124m"[39m
[1;32m   1057[0m     )
[0;32m-> 1059[0m [43m[49m[38;5;28;43;01mwith[39;49;00m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_error_catcher[49m[43m([49m[43m)[49m[43m:[49m
[1;32m   1060[0m [43m    [49m[38;5;66;43;03m# Don't bother reading the body of a HEAD request.[39;49;00m
[1;32m   1061[0m [43m    [49m[38;5;28;43;01mif[39;49;00m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_original_response[49m[43m [49m[38;5;129;43;01mand[39;49;00m[43m [49m[43mis_response_to_head[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_original_response[49m[43m)[49m[43m:[49m

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/contextlib.py:158[0m, in [0;36m_GeneratorContextManager.__exit__[0;34m(self, typ, value, traceback)[0m
[1;32m    157[0m [38;5;28;01mtry[39;00m:
[0;32m--> 158[0m     [38;5;28mself[39m[38;5;241m.[39mgen[38;5;241m.[39mthrow(typ, value, traceback)
[1;32m    159[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m [38;5;28;01mas[39;00m exc:
[1;32m    160[0m     [38;5;66;03m# Suppress StopIteration *unless* it's the same exception that[39;00m
[1;32m    161[0m     [38;5;66;03m# was passed to throw().  This prevents a StopIteration[39;00m
[1;32m    162[0m     [38;5;66;03m# raised inside the "with" statement from being suppressed.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/urllib3/response.py:729[0m, in [0;36mHTTPResponse._error_catcher[0;34m(self)[0m
[1;32m    727[0m [38;5;28;01mexcept[39;00m (HTTPException, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m e:
[1;32m    728[0m     [38;5;66;03m# This includes IncompleteRead.[39;00m
[0;32m--> 729[0m     [38;5;28;01mraise[39;00m ProtocolError([38;5;124mf[39m[38;5;124m"[39m[38;5;124mConnection broken: [39m[38;5;132;01m{[39;00me[38;5;132;01m!r}[39;00m[38;5;124m"[39m, e) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[1;32m    731[0m [38;5;66;03m# If no exception is thrown, we should avoid cleaning up[39;00m
[1;32m    732[0m [38;5;66;03m# unnecessarily.[39;00m

[0;31mProtocolError[0m: ("Connection broken: InvalidChunkLength(got length b'', 0 bytes read)", InvalidChunkLength(got length b'', 0 bytes read))

During handling of the above exception, another exception occurred:

[0;31mChunkedEncodingError[0m                      Traceback (most recent call last)
Cell [0;32mIn[20], line 10[0m
[1;32m      8[0m page_curr [38;5;241m=[39m i [38;5;241m+[39m [38;5;241m1[39m
[1;32m      9[0m url [38;5;241m=[39m base [38;5;241m+[39m [38;5;124m"[39m[38;5;124m/annotations/heading/JSON?heading=[39m[38;5;124m"[39m [38;5;241m+[39m heading [38;5;241m+[39m [38;5;124m"[39m[38;5;124m&page=[39m[38;5;124m"[39m [38;5;241m+[39m [38;5;28mstr[39m(page_curr)
[0;32m---> 10[0m data[i] [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43murl[49m[43m)[49m[38;5;241m.[39mjson()
[1;32m     12[0m [38;5;28;01mif[39;00m page_curr [38;5;241m%[39m [38;5;241m5[39m [38;5;241m==[39m [38;5;241m0[39m :
[1;32m     13[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mGetting data for page[39m[38;5;124m"[39m, page_curr)

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/api.py:73[0m, in [0;36mget[0;34m(url, params, **kwargs)[0m
[1;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[1;32m     64[0m 
[1;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[0;32m   (...)[0m
[1;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[1;32m     71[0m [38;5;124;03m    """[39;00m
[0;32m---> 73[0m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mget[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mparams[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/api.py:59[0m, in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[1;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[1;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[1;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/sessions.py:589[0m, in [0;36mSession.request[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    584[0m send_kwargs [38;5;241m=[39m {
[1;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[1;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[1;32m    587[0m }
[1;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[0;32m--> 589[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[1;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/sessions.py:747[0m, in [0;36mSession.send[0;34m(self, request, **kwargs)[0m
[1;32m    744[0m         [38;5;28;01mpass[39;00m
[1;32m    746[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m stream:
[0;32m--> 747[0m     [43mr[49m[38;5;241;43m.[39;49m[43mcontent[49m
[1;32m    749[0m [38;5;28;01mreturn[39;00m r

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/models.py:899[0m, in [0;36mResponse.content[0;34m(self)[0m
[1;32m    897[0m         [38;5;28mself[39m[38;5;241m.[39m_content [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m    898[0m     [38;5;28;01melse[39;00m:
[0;32m--> 899[0m         [38;5;28mself[39m[38;5;241m.[39m_content [38;5;241m=[39m [38;5;124;43mb[39;49m[38;5;124;43m"[39;49m[38;5;124;43m"[39;49m[38;5;241;43m.[39;49m[43mjoin[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43miter_content[49m[43m([49m[43mCONTENT_CHUNK_SIZE[49m[43m)[49m[43m)[49m [38;5;129;01mor[39;00m [38;5;124mb[39m[38;5;124m"[39m[38;5;124m"[39m
[1;32m    901[0m [38;5;28mself[39m[38;5;241m.[39m_content_consumed [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m    902[0m [38;5;66;03m# don't need to release the connection; that's been handled by urllib3[39;00m
[1;32m    903[0m [38;5;66;03m# since we exhausted the data.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/requests/models.py:818[0m, in [0;36mResponse.iter_content.<locals>.generate[0;34m()[0m
[1;32m    816[0m     [38;5;28;01myield from[39;00m [38;5;28mself[39m[38;5;241m.[39mraw[38;5;241m.[39mstream(chunk_size, decode_content[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m    817[0m [38;5;28;01mexcept[39;00m ProtocolError [38;5;28;01mas[39;00m e:
[0;32m--> 818[0m     [38;5;28;01mraise[39;00m ChunkedEncodingError(e)
[1;32m    819[0m [38;5;28;01mexcept[39;00m DecodeError [38;5;28;01mas[39;00m e:
[1;32m    820[0m     [38;5;28;01mraise[39;00m ContentDecodingError(e)

[0;31mChunkedEncodingError[0m: ("Connection broken: InvalidChunkLength(got length b'', 0 bytes read)", InvalidChunkLength(got length b'', 0 bytes read))
ChunkedEncodingError: ("Connection broken: InvalidChunkLength(got length b'', 0 bytes read)", InvalidChunkLength(got length b'', 0 bytes read))

